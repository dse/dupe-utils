#!/usr/bin/env perl
use warnings;
use strict;
STDOUT->autoflush(1);
STDERR->autoflush(1);
my %dev_ino_file;               # list of filenames by devino
my %file_dev_ino;               # each file's devino
my %size_dev_ino;               # list of devinos with size of size
use FindBin;
use lib "${FindBin::Bin}/../lib";
use My::ShellQuote qw(shell_quote);
use My::DupeGroup qw(group_dupes);
while (<>) {
    s{\R\z}{};
    my ($ver, @fields) = split();
    my ($dev, $ino, $size, $filename);
    if ($ver eq 'v1') {
        ($dev, $ino, $size, $filename) = @fields;
    } else {
        next;
    }
    my $dev_ino = $dev . $; . $ino;
    push(@{$dev_ino_file{$dev_ino}}, $filename);
    $file_dev_ino{$filename} = $dev_ino;
    push(@{$size_dev_ino{$size}}, $dev_ino);
}
# decreasing order
my @sizes = sort { $b <=> $a } keys %size_dev_ino;
foreach my $size (@sizes) {
    my @dev_ino = @{$size_dev_ino{$size}};
    next if scalar @dev_ino < 2;
    my @filenames = map { $dev_ino_file{$_}[0] } @dev_ino;
    next if scalar @filenames < 2;
    my @dupe_groups = group_dupes(@filenames);
    foreach my $group (@dupe_groups) {
        my @filenames = sort @$group;
        my $keep = shift(@filenames);
        printf("## %s (%d)\n", $keep, $size);
        foreach my $filename (@filenames) {
            printf("rm %s\n", shell_quote($filename));
        }
    }
}
